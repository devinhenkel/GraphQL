type User {
  id: ID! @unique
  username: String!
  firstname: String
  lastname: String
  email: String! @unique
  password: String!
  posts: [Post!]! @relation(name: "PostByUser", onDelete: CASCADE)
  comments: [Comment!]! @relation(name:"CommentByUser", onDelete: CASCADE)
  roles: [Role]
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum Role {
  USER
  EDITOR
  REVIEWER
  ADMIN
}

type Post {
  id: ID! @unique
  title: String!
  body: String!
  author: User! @relation(name: "PostByUser", onDelete: SET_NULL)
  published: Boolean!
  comments: [Comment!]! @relation(name: "CommentToPost", onDelete: CASCADE)
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Comment {
    id: ID! @unique
    text: String!
    author: User! @relation(name: "CommentByUser", onDelete: SET_NULL)
    post: Post! @relation(name: "CommentToPost", onDelete: SET_NULL)
  createdAt: DateTime!
  updatedAt: DateTime!
}
